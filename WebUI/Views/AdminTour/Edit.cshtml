@using WebUI.Models
@model TourEditViewModel

@{
    ViewBag.Title = "Оновити";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="panel">
        <div class="panel-heading">
            <h3>Оновлення контенту "@Model.Tour.Name #@Model.Tour.TourId"</h3>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Tour.TourId)

            <div class="form-group">
                @Html.LabelFor(model => model.Tour.Name, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Tour.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tour.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tour.Description, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Tour.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tour.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tour.Image, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Tour.Image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tour.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tour.Price, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Tour.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tour.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tour.Type, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Tour.Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tour.Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tour.Format, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    <select class="form-control" name="formatId">
                        @foreach (var format in Model.Formats)
                        {
                            if (format.FormatId == Model.CurentFormat)
                            {
                                <option selected value="@format.FormatId">@format.FormatName</option>
                                continue;
                            }
                            <option value="@format.FormatId">@format.FormatName</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <input type="submit" value="Зберегти" class="btn btn-outline-success" />
            @Html.ActionLink("Відміна", "List", null, new { @class = "btn btn-outline-warning" })
        </div>
    </div>
}

